import random
import math

# Taking Inputs for the length and width of the grid

# Generate a random number for the grid length l using randint() function
l = random.randint(5, 50) # random range, since range was not provided in assignment
# Generate a random number for the grid width w
w = random.randint(5, 50) # random range, since range was not provided in assignment
# Generate a random number between 1 and l for the x position s1
s1 = random.randint(1, l)  
# Generate a random number between 1 and w for the y position s2
s2 = random.randint(1, w)

# Display grid size
print("\nGrid length: %d" % l)
print("\nGrid width: %d" % w)

# <here, add the code for checking the userâ€™s input on the x and y coordinates
# Initializing the number of attempts
attempts = 0
guessed = False
nGuesses = 10 # random number since number of guesses was not provided in assignment

# testing for row
while not guessed:
    if attempts >= nGuesses:
        print("\nThe number is %d" % s1)
        print("\tBetter Luck Next Time!")
        break 

    attempts += 1 
    # taking guessing number as input
    # <here, add the code for user input and assigned to variable guess>
    guess = int(input("\nGuess the row position of the treasure: "))

    # Condition testing of the guess
    # <here, add the required code for testing the guess and to implement
    # steps 4, 5 and 6 in the above algorithm>
    if guess < s1:
        print("\nYou guessed too low for the row position, try again, %d attempts used!" % attempts)
    elif guess > s1:
        print("\nYou guessed too high for the row position, try again, %d attempts used!" % attempts)
    else:
        print("\nYou guessed correctly, %d attempt(s) used, now try to guess the column position!" % attempts)
        guessed = True  

# testing for column
guessed = False  
while not guessed:
    if attempts >= nGuesses:
        print("\nThe number is %d" % s2)
        print("\tBetter Luck Next Time!")
        break 

    attempts += 1 
    guess = int(input("\nGuess the column position of the treasure: "))

    if guess < s2:
        print("\nYou guessed too low for the column position, try again, %d attempt(s) used!" % attempts)
    elif guess > s2:
        print("\nYou guessed too high for the column position, try again, %d attempt(s) used!" % attempts)
    else:
        print("\nYou guessed the position of the treasure correctly, %d attempt(s) used!" % attempts)
        guessed = True  # Exit loop when correct guess is made
